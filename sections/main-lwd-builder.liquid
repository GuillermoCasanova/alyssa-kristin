{% comment %} {{ 'lwd-builder.css' | asset_url | stylesheet_tag }} {% endcomment %}
{{ 'vendor-swiper.css' | asset_url | stylesheet_tag }}

<style>
  /*------------------------------------*\
    #LWD Builder
\*------------------------------------*/

  .lwd-builder {
    background-color: rgb(var(--color-base-background-2));
  }

  .lwd-builder.is-alt {
    background-color: #c3c0b9;
  }
  .lwd-builder__inner {
    padding-top: var(--level10);
  }

  .lwd-builder__heading {
    text-align: center;
    font-size: var(--h2);
    font-family: var(--secondary-font-family);
    text-transform: uppercase;
    margin-bottom: var(--level9);
  }

  .lwd-builder__heading p {
    margin-bottom: 0;
  }

  @media screen and (min-width: 940px) {
    .lwd-builder__heading {
      margin-bottom: var(--level7);
    }
  }

  .lwd-builder__heading em {
    text-align: italic;
    display: block;
    text-transform: lowercase;
  }

  .lwd-combinations-container {
    position: relative;
    margin-bottom: var(--level8);
    width: 100%;
    display: flex;
    flex-direction: column;
  }

  @media screen and (min-width: 940px) {
    .lwd-combinations-container {
      position: relative;
      margin-bottom: var(--level8);
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-self: center;
      max-width: 100%;
    }
  }

  .lwd-combinations-container .collection-item.active {
    z-index: 1;
  }

  lwd-slideshow {
    display: block;
    width: 100%;
  }

  lwd-slideshow .swiper-slide {
    width: 100%;
    opacity: 0.4;
  }

  lwd-slideshow .swiper-slide.swiper-slide-active {
    opacity: 1;
  }

  lwd-slideshow .swiper-slide {
    width: 60vw;
  }

  @media screen and (min-width: 940px) {
    lwd-slideshow .swiper-slide {
      width: 40vw;
      max-width: 30rem;
    }

    lwd-slideshow .swiper-slide.swiper-slide-active {
      opacity: 1;
    }
  }
  .lwd-combinations-container__option__image {
    position: relative;
    background-color: white;
  }

  .lwd-combinations-container__option__image__inner {
    padding-bottom: 75%;
  }

  .lwd-combinations-container__option__image__inner img {
    object-fit: contain;
    width: 90%;
    margin-left: auto;
    margin-right: auto;
  }

  .lwd-combinations-container__option__image.active,
  .lwd-builder-option_image.active {
    z-index: 1;
  }

  .lwd-combinations-container__tops,
  .lwd-combinations-container__bottoms {
    position: relative;
    overflow: hidden;
    width: 100%;
  }

  .lwd-combinations-container__tops img {
    object-position: bottom;
  }

  .lwd-combinations-container__bottoms img {
    object-position: top;
    margin-left: auto;
    margin-right: auto;
  }

  @media screen and (min-width: 940px) {
    .is-alt .lwd-builder__body {
      align-items: center;
    }
  }

  .lwd-builder__body {
    display: flex;
    flex-direction: column;
    width: 100%;
  }

  @media (min-width: 940px) {
    .lwd-builder__body {
      display: grid;
      grid-template-columns: 55% 45%;
      justify-content: space-between;
      grid-column-gap: var(--level10);
      align-items: center;
    }
  }

  .lwd-builder__copy {
    padding: var(--level4);
    text-align: center;
  }

  .lwd-builder__heading {
    text-transform: uppercase;
    text-align: center;
    font-size: var(--h2);
    font-family: var(--secondary-font-family);
    margin-bottom: var(--level8);
  }

  .lwd-builder__body {
    font-size: var(--h6);
  }

  /*------------------------------------*\
    #LWD Builder Controls
\*------------------------------------*/

  .lwd-builder__controls {
    display: grid;
    flex-direction: row;
    gap: var(--level4);
    grid-template-columns: 1fr 1fr;
  }

  @media screen and (min-width: 940px) {
    .lwd-builder__controls {
      max-width: 30rem;
      display: flex;
      width: 100%;
      justify-self: center;
      flex-direction: column;
    }
  }
  .lwd-builder-options__images {
    position: relative;
    max-width: 12rem;
    width: 100%;
  }

  .lwd-builder-options__images__inner {
    position: relative;
    overflow: hidden;
    width: 100%;
    padding-bottom: 100%;
  }

  @media screen and (min-width: 940px) {
    .lwd-builder-options__images__inner {
      order: 1;
    }
  }

  .lwd-builder-option__image {
    position: absolute;
    width: 100%;
    top: 0;
    left: 0;
    opacity: 0;
    height: 100%;
  }

  .lwd-builder-option__image.active {
    z-index: 1;
    opacity: 1;
  }

  .lwd-builder-option__image__inner {
    padding-bottom: 100%;
  }
  .lwd-builder-option__image__inner img {
    object-fit: contain;
  }

  @media screen and (min-width: 940px) {
    .lwd-builder-option__image__inner {
      padding-bottom: 100%;
    }
  }

  .lwd-builder__controls__heading {
    font-size: var(--h5);
    font-weight: bold;
    text-transform: uppercase;
    text-align: center;
  }

  @media screen and (min-width: 940px) {
    .lwd-builder__controls__heading {
      order: 2;
      text-align: left;
    }
  }

  .lwd-builder__controls__heading span {
    font-weight: normal;
    display: block;
  }

  .lwd-builder__controls__cta {
    text-align: center;
    grid-column: span 2;
  }

  .lwd-builder__controls__tops,
  .lwd-builder__controls__bottoms {
    background-color: white;
    padding: var(--level4);
    margin-bottom: var(--level5);
  }

  @media screen and (min-width: 940px) {
    .lwd-builder__controls__tops,
    .lwd-builder__controls__bottoms {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      column-gap: var(--level8);
      margin-bottom: 0;
    }
  }

  @media screen and (min-width: 940px) {
    .lwd-builder__controls__bottoms {
      margin-bottom: var(--level8);
    }
  }

  /*------------------------------------*\
    #LWD Builder Swiper Buttons
\*------------------------------------*/

  .lwd-builder .swiper-button-next,
  .lwd-builder .swiper-button-prev {
    color: rgb(var(--color-base-text-1));
  }

  .lwd-builder .swiper-button-next:after,
  .lwd-builder .swiper-button-prev:after {
    content: none;
  }

  @media screen and (min-width: 940px) {
    .lwd-builder .swiper-button-next,
    .lwd-builder .swiper-button-prev {
      width: 2.5rem;
    }
  }

  .lwd-builder .swiper-button-next svg {
    transform: scaleX(-100%);
  }

  .lwd-builder .swiper-button-next {
    margin-right: var(--level6);
  }

  @media screen and (min-width: 940px) {
    .lwd-builder .swiper-button-next {
      margin-right: var(--level10);
    }
  }

  .lwd-builder .swiper-button-prev {
    margin-left: var(--level6);
  }

  @media screen and (min-width: 940px) {
    .lwd-builder .swiper-button-prev {
      margin-left: var(--level10);
    }
  }

  /*------------------------------------*\
    #Alt Styles
\*------------------------------------*/

  @media screen and (min-width: 940px) {
    .is-alt .card {
      pointer-events: auto;
      width: 100%;
      position: relative;
      z-index: 1;
    }
  }

  .lwd-builder-alt-copy {
    padding: var(--level2);
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  @media screen and (min-width: 940px) {
    .lwd-builder-alt-copy {
      padding: var(--level9);
      padding-left: var(--level8);
      padding-right: var(--level8);
      font-size: var(--h3);
    }
  }

  .lwd-builder-alt-copy__heading em {
    display: inline;
  }

  @media screen and (min-width: 940px) {
    .lwd-builder-alt-copy__heading {
      font-size: var(--h1);
    }
  }
</style>
<script type="module" src="{{ 'custom-slideshow.js' | asset_url }}"></script>
<script src="{{ 'lwd-builder.js' | asset_url }}" defer></script>
<lwd-builder>
  <section class="lwd-builder {% if section.settings.is_alt %}is-alt{% endif %}">
    <div class="page-width is-small lwd-builder__inner">
      <h2 class="lwd-builder__heading hide-for-large-up"><em> Customize Your</em> Little White Dress</h2>

      <div class="lwd-builder__body">
        <div class="lwd-combinations-container" data-dress-combo>
          <div class="lwd-combinations-container__tops" data-dress-combo-options>
            {% assign top_slideshow_image_ids = '' %}
            <lwd-slideshow
              centeredSlides="true"
              freeMode="false"
              pagination="false"
              navigation="true"
              slidesPerView="auto"
              spaceBetween="0"
              loop="true"
              effect="coverflow"
            >
              {% for product in section.settings.collection.products %}
                {% assign top_slideshow_image_id = all_products[product.metafields.dress.top].id %}
                {% unless top_slideshow_image_ids contains top_slideshow_image_id %}
                  <div
                    class="lwd-combinations-container__option__image"
                    data-dress-combo-option
                    data-id="{{ top_slideshow_image_id }}"
                  >
                    <div class="lwd-combinations-container__option__image__inner">
                      <img
                        src="{{ product.metafields.dress.top | img_url: 'large' }}"
                        alt="{{ product.title }} top"
                        width="300"
                        height="300"
                        class="responsive-image"
                      >
                    </div>
                  </div>
                  {% assign top_slideshow_image_ids = top_slideshow_image_ids
                    | append: top_slideshow_image_id
                    | append: ','
                  %}
                {% endunless %}
              {% endfor %}
            </lwd-slideshow>
          </div>

          <div class="lwd-combinations-container__bottoms" data-dress-combo-options>
            {% assign bottom_slideshow_image_ids = '' %}
            <lwd-slideshow
              centeredSlides="true"
              freeMode="false"
              pagination="false"
              navigation="true"
              slidesPerView="auto"
              loop="true"
              effect="coverflow"
              spaceBetween="0"
            >
              {% for product in section.settings.collection.products %}
                {% assign bottom_slideshow_image_id = all_products[product.metafields.dress.bottom].id %}
                {% unless bottom_slideshow_image_ids contains bottom_slideshow_image_id %}
                  <div
                    class="lwd-combinations-container__option__image"
                    data-dress-combo-option
                    data-id="{{ bottom_slideshow_image_id }}"
                  >
                    <div class="lwd-combinations-container__option__image__inner">
                      <img
                        src="{{ product.metafields.dress.bottom | img_url: 'large' }}"
                        alt="{{ product.title }} bottom"
                        width="300"
                        height="300"
                        class="responsive-image"
                      >
                    </div>
                  </div>
                  {% assign bottom_slideshow_image_ids = bottom_slideshow_image_ids
                    | append: bottom_slideshow_image_id
                    | append: ','
                  %}
                {% endunless %}
              {% endfor %}
            </lwd-slideshow>
          </div>
        </div>
        {% if section.settings.is_alt == false %}
          <div class="lwd-builder__controls">
            <h2 class="lwd-builder__heading show-for-large-up"><em> Customize Your</em> Little White Dress</h2>

            <div class="lwd-builder__controls__tops">
              <h3 class="lwd-builder__controls__heading">Top: <span data-top-selected-title></span></h3>
              <select data-top-select class="visually-hidden">
                {% assign top_ids = '' %}
                {% for product in section.settings.collection.products %}
                  {% assign top_id = all_products[product.metafields.dress.top].id %}
                  {% unless top_ids contains top_id %}
                    <option
                      value="{{ top_id }}"
                      {% if top_ids == '' %}
                        selected
                      {% endif %}
                    >
                      {{ all_products[product.metafields.dress.top].title }}
                    </option>
                    {% assign top_ids = top_ids | append: top_id | append: ',' %}
                  {% endunless %}
                {% endfor %}
              </select>
              <div class="lwd-builder-options__images" data-option-images>
                <div class="lwd-builder-options__images__inner">
                  {% assign top_image_ids = '' %}
                  {% for product in section.settings.collection.products %}
                    {% assign top_image_id = all_products[product.metafields.dress.top].id %}
                    {% unless top_image_ids contains top_image_id %}
                      <div class="lwd-builder-option__image" data-id="{{ top_image_id }}">
                        <div class="lwd-builder-option__image__inner">
                          <img
                            src="{{ product.metafields.dress.top | img_url: 'large' }}"
                            alt="{{ product.title }} top"
                            width="300"
                            height="300"
                            class="responsive-image"
                          >
                        </div>
                      </div>
                      {% assign top_image_ids = top_image_ids | append: top_image_id | append: ',' %}
                    {% endunless %}
                  {% endfor %}
                </div>
              </div>
            </div>
            <div class="lwd-builder__controls__bottoms">
              <h3 class="lwd-builder__controls__heading">Bottom: <span data-bottom-selected-title></span></h3>
              <select data-bottom-select class="visually-hidden">
                {% assign bottom_ids = '' %}
                {% for product in section.settings.collection.products %}
                  {% assign bottom_id = all_products[product.metafields.dress.bottom].id %}
                  {% unless bottom_ids contains bottom_id %}
                    <option
                      value="{{ bottom_id }}"
                      {% if bottom_ids == '' %}
                        selected
                      {% endif %}
                    >
                      {{ all_products[product.metafields.dress.bottom].title }}
                    </option>
                    {% assign bottom_ids = bottom_ids | append: bottom_id | append: ',' %}
                  {% endunless %}
                {% endfor %}
              </select>
              <div class="lwd-builder-options__images" data-option-images>
                <div class="lwd-builder-options__images__inner">
                  {% assign bottom_image_ids = '' %}
                  {% for product in section.settings.collection.products %}
                    {% assign bottom_image_id = all_products[product.metafields.dress.bottom].id %}
                    {% unless bottom_image_ids contains bottom_image_id %}
                      <div class="lwd-builder-option__image" data-id="{{ bottom_image_id }}">
                        <div class="lwd-builder-option__image__inner">
                          <img
                            src="{{ product.metafields.dress.bottom | img_url: 'large' }}"
                            alt="{{ product.title }} bottom"
                            width="300"
                            height="300"
                            class="responsive-image"
                          >
                        </div>
                      </div>
                      {% assign bottom_image_ids = bottom_image_ids | append: bottom_image_id | append: ',' %}
                    {% endunless %}
                  {% endfor %}
                </div>
              </div>
            </div>
            <div class="lwd-builder__controls__cta">
              <a href="" data-product-url class="button button--primary  button--medium"> Build This LWD </a>
            </div>
          </div>
        {% else %}
          <div class="card is-alt">
            <div class="card__inner">
              <div class="lwd-builder-alt-copy">
                <h2 class="lwd-builder__heading  lwd-builder-alt-copy__heading">
                  {% if section.settings.alt_version_heading != blank %}
                    {{ section.settings.alt_version_heading }}
                  {% else %}
                    {{ section.settings.collection.title }}
                  {% endif %}
                </h2>
                <div class="lwd-builder-alt-copy_description">
                  {% if section.settings.alt_version_body != blank %}
                    {{ section.settings.alt_version_body }}
                  {% else %}
                    {{ section.settings.collection.description }}
                  {% endif %}
                </div>
                <a href="{{ section.settings.alt_version_cta_link }}" class="button button--primary button--medium">
                  {{- section.settings.alt_version_cta_label -}}
                </a>
              </div>
            </div>
          </div>
        {% endif %}
      </div>
    </div>
  </section>

  {% for product in section.settings.collection.products %}
    <div
      data-dresses
      data-dress-url="{{ product.url }}"
      data-top-id="{{ all_products[product.metafields.dress.top].id }}"
      data-bottom-id="{{ all_products[product.metafields.dress.bottom].id }}"
      class="visually-hidden"
    ></div>
  {% endfor %}
</lwd-builder>

{% schema %}
{
  "name": "LWD Builder",
  "enabled_on": {
    "templates": ["collection", "page", "index"]
  },
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "checkbox",
      "id": "is_alt",
      "label": "Is Alt",
      "default": false
    },
    {
      "type": "richtext",
      "id": "alt_version_heading",
      "label": "Alt Version Heading",
      "default": "<h2>Your Alt Version Heading Here</h2>"
    },
    {
      "type": "richtext",
      "id": "alt_version_body",
      "label": "Alt Version Body",
      "default": "<p>Your Alt Version Body Here</p>"
    },
    {
      "type": "text",
      "id": "alt_version_cta_label",
      "label": "Alt Version CTA Label",
      "default": "Explore More"
    },
    {
      "type": "url",
      "id": "alt_version_cta_link",
      "label": "Alt Version CTA Link"
    }
  ],
  "presets": [
    {
      "name": "LWD Builder"
    }
  ]
}
{% endschema %}
